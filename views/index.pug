extends layout

block content
  h1 CHAD dataset downloader
  p This is a crawler to download 
    a(href="https://github.com/amanteur/CHAD") CHAD dataset
    |  using 
    a(href="https://instances.hyper.lol/") multiple cobalt instances.
    |  The dataset has about 36,000 YouTube songs.
  p source code: 
    a(href='https://github.com/stdio2016/chad-downloader') https://github.com/stdio2016/chad-downloader
  h2 Download status
  p Total: 
    span= count.total
    | , Downloaded: 
    span= count.success
    | , Not available: 
    span= count.failed
    | , Failed: 
    span= count.restart
  h2 Instance status
  table
    thead
      tr
        th(onclick='sort(event)') API
        th(onclick='sort(event)') Status
        th(onclick='sort(event,"number")') Success
        th(onclick='sort(event,"number")') Failed
        th(onclick='sort(event,"number")') Quota
        th(onclick='sort(event)') Why banned
    for inst in instances
      if inst.status === 'up'
        - status = '✅'
      else if inst.status === 'deleted'
        - status = '🗑️'
      else
        - status = '❌'
      if inst.banned
        - status += '⛔'
      tr
        td= inst.endpoint
        td(title=inst.status)= status
        td= inst.success
        td= inst.fail
        td= inst.quota
        td= inst.banned
  script.
    function sort(event, type) {
      // not very efficient, but it works
      var col = event.target;
      var table = col.parentNode.parentNode.parentNode;
      var rows = table.tBodies[0].rows;
      var thead = col.parentNode;
      var whichCol = 0;
      for (var i = 0; i < thead.cells.length; i++) {
        if (thead.cells[i] === event.target) {
          whichCol = i;
          break;
        }
      }
      var arr = [];
      for (var i = 0; i < rows.length; i++) {
        arr.push(rows[i]);
      }
      if (type === 'number') {
        arr.sort((a, b) => a.cells[whichCol].textContent - b.cells[whichCol].textContent);
      } else {
        arr.sort((a, b) => a.cells[whichCol].textContent.localeCompare(b.cells[whichCol].textContent));
      }
      for (var i = 0; i < arr.length; i++) {
        table.tBodies[0].appendChild(arr[i]);
      }
    }
